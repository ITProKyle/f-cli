name: default

on:
  pull_request:  # any pull request
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

env:
  NODE_VERSION: '20'
  PYTEST_ADDOPTS: --color=yes

jobs:
  lint-python:
    name: Lint Python
    strategy:
      matrix:
        python-version: [3.12]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: package-lock.json
          node-version-file: package.json
      - uses: ITProKyle/action-setup-python@v0.7.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Node Dependencies
        run: npm ci
      - name: Run Linters
        run: make lint
  test-python:
    name: Python tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: ITProKyle/action-setup-python@v0.7.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests
        run: make test
      - name: Upload to Codecov
        env:
          RUNNER_ARCH: ${{ runner.arch }}
          RUNNER_OS: ${{ runner.os }}
        uses: codecov/codecov-action@v3.1.4
        with:
          env_vars: PYTHON_VERSION,RUNNER_ARCH,RUNNER_OS
          fail_ci_if_error: true
  build-pypi:
    name: Build PyPi ðŸ“¦
    needs:
      - lint-python
      - test-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo (complete)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ITProKyle/action-setup-python@v0.7.0
      - name: Install Poetry Plugins
        run: poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Run Build
        run: make build
      - name: Upload Distribution Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pypi-dist
          path: dist
